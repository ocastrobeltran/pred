"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/reservar/page",{

/***/ "(app-pages-browser)/./services/solicitud-service.ts":
/*!***************************************!*\
  !*** ./services/solicitud-service.ts ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buscarSolicitudPorCodigo: () => (/* binding */ buscarSolicitudPorCodigo),\n/* harmony export */   cambiarEstadoSolicitud: () => (/* binding */ cambiarEstadoSolicitud),\n/* harmony export */   createSolicitud: () => (/* binding */ createSolicitud),\n/* harmony export */   getEstadosSolicitud: () => (/* binding */ getEstadosSolicitud),\n/* harmony export */   getPropositos: () => (/* binding */ getPropositos),\n/* harmony export */   getSolicitudById: () => (/* binding */ getSolicitudById),\n/* harmony export */   getSolicitudes: () => (/* binding */ getSolicitudes)\n/* harmony export */ });\n/* harmony import */ var _api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api */ \"(app-pages-browser)/./services/api.ts\");\n\n/**\n * Obtiene la lista de solicitudes con paginación y filtros opcionales\n */ async function getSolicitudes() {\n    let page = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1, filters = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    try {\n        const queryParams = new URLSearchParams({\n            page: page.toString(),\n            ...Object.fromEntries(Object.entries(filters).filter((param)=>{\n                let [_, v] = param;\n                return v !== undefined;\n            }))\n        });\n        return (0,_api__WEBPACK_IMPORTED_MODULE_0__.get)(\"solicitudes?\".concat(queryParams.toString()));\n    } catch (error) {\n        console.error(\"Error fetching solicitudes:\", error);\n        // Return mock data\n        return {\n            success: true,\n            message: \"Solicitudes obtenidas exitosamente (mock)\",\n            data: {\n                data: [\n                    {\n                        id: 1,\n                        codigo: \"SOL-001\",\n                        escenario_id: 1,\n                        escenario: {\n                            nombre: \"Estadio El Campín\",\n                            direccion: \"Calle 57 #21-83, Bogotá\"\n                        },\n                        usuario_id: 1,\n                        usuario: {\n                            nombre: \"Juan\",\n                            apellido: \"Pérez\"\n                        },\n                        fecha_reserva: \"2023-06-15\",\n                        hora_inicio: \"15:00:00\",\n                        hora_fin: \"17:00:00\",\n                        proposito_id: 1,\n                        proposito: \"Evento deportivo\",\n                        num_participantes: 20,\n                        estado: \"aprobada\",\n                        created_at: \"2023-06-01T10:00:00\",\n                        updated_at: \"2023-06-02T14:30:00\"\n                    },\n                    {\n                        id: 2,\n                        codigo: \"SOL-002\",\n                        escenario_id: 2,\n                        escenario: {\n                            nombre: \"Coliseo El Salitre\",\n                            direccion: \"Av. 68 #63-45, Bogotá\"\n                        },\n                        usuario_id: 1,\n                        usuario: {\n                            nombre: \"Juan\",\n                            apellido: \"Pérez\"\n                        },\n                        fecha_reserva: \"2023-06-10\",\n                        hora_inicio: \"18:00:00\",\n                        hora_fin: \"20:00:00\",\n                        proposito_id: 2,\n                        proposito: \"Entrenamiento\",\n                        num_participantes: 15,\n                        estado: \"completada\",\n                        created_at: \"2023-05-20T09:15:00\",\n                        updated_at: \"2023-06-11T10:00:00\"\n                    },\n                    {\n                        id: 3,\n                        codigo: \"SOL-003\",\n                        escenario_id: 3,\n                        escenario: {\n                            nombre: \"Complejo de Tenis\",\n                            direccion: \"Calle 163 #8-50, Bogotá\"\n                        },\n                        usuario_id: 1,\n                        usuario: {\n                            nombre: \"Juan\",\n                            apellido: \"Pérez\"\n                        },\n                        fecha_reserva: \"2023-06-05\",\n                        hora_inicio: \"10:00:00\",\n                        hora_fin: \"12:00:00\",\n                        proposito_id: 4,\n                        proposito: \"Recreación\",\n                        num_participantes: 4,\n                        estado: \"pendiente\",\n                        created_at: \"2023-05-30T16:45:00\",\n                        updated_at: \"2023-05-30T16:45:00\"\n                    }\n                ],\n                pagination: {\n                    current_page: 1,\n                    last_page: 1,\n                    per_page: 10,\n                    total: 3\n                }\n            }\n        };\n    }\n}\n/**\n * Obtiene los detalles de una solicitud específica\n */ async function getSolicitudById(id) {\n    try {\n        return (0,_api__WEBPACK_IMPORTED_MODULE_0__.get)(\"solicitudes/\".concat(id));\n    } catch (error) {\n        console.error(\"Error fetching solicitud:\", error);\n        // Return mock data\n        return {\n            success: true,\n            message: \"Solicitud obtenida exitosamente (mock)\",\n            data: {\n                id: Number(id),\n                codigo: \"SOL-00\".concat(id),\n                escenario_id: 1,\n                escenario: {\n                    nombre: \"Estadio El Campín\",\n                    direccion: \"Calle 57 #21-83, Bogotá\",\n                    capacidad: 36343\n                },\n                usuario_id: 1,\n                usuario: {\n                    nombre: \"Juan\",\n                    apellido: \"Pérez\"\n                },\n                fecha_reserva: \"2023-06-15\",\n                hora_inicio: \"15:00:00\",\n                hora_fin: \"17:00:00\",\n                proposito_id: 1,\n                proposito: \"Evento deportivo\",\n                num_participantes: 20,\n                notas: \"Necesitamos acceso a los vestidores\",\n                admin_notas: \"Aprobado sin observaciones\",\n                estado: \"aprobada\",\n                created_at: \"2023-06-01T10:00:00\",\n                updated_at: \"2023-06-02T14:30:00\"\n            }\n        };\n    }\n}\n/**\n * Crea una nueva solicitud de reserva\n */ async function createSolicitud(solicitud) {\n    try {\n        return (0,_api__WEBPACK_IMPORTED_MODULE_0__.post)(\"solicitudes\", solicitud);\n    } catch (error) {\n        console.error(\"Error creating solicitud:\", error);\n        // Return mock success response\n        return {\n            success: true,\n            message: \"Solicitud creada exitosamente (mock)\",\n            data: {\n                id: Math.floor(Math.random() * 1000) + 10,\n                codigo: \"SOL-\".concat(Math.floor(Math.random() * 1000)),\n                ...solicitud,\n                estado: \"pendiente\",\n                created_at: new Date().toISOString(),\n                updated_at: new Date().toISOString()\n            }\n        };\n    }\n}\n/**\n * Cambia el estado de una solicitud (admin/supervisor)\n */ async function cambiarEstadoSolicitud(id, estado, adminNotas) {\n    return (0,_api__WEBPACK_IMPORTED_MODULE_0__.put)(\"solicitudes/\".concat(id, \"/cambiar-estado\"), {\n        estado,\n        admin_notas: adminNotas\n    });\n}\n/**\n * Busca una solicitud por código\n */ async function buscarSolicitudPorCodigo(codigo) {\n    return (0,_api__WEBPACK_IMPORTED_MODULE_0__.get)(\"solicitudes/buscar?codigo=\".concat(codigo));\n}\n/**\n * Obtiene la lista de estados de solicitud\n */ async function getEstadosSolicitud() {\n    return {\n        success: true,\n        message: \"Estados obtenidos exitosamente (mock)\",\n        data: [\n            {\n                id: 1,\n                nombre: \"pendiente\"\n            },\n            {\n                id: 2,\n                nombre: \"aprobada\"\n            },\n            {\n                id: 3,\n                nombre: \"rechazada\"\n            },\n            {\n                id: 4,\n                nombre: \"completada\"\n            }\n        ]\n    };\n}\n/**\n * Obtiene la lista de propósitos de reserva\n */ async function getPropositos() {\n    try {\n        return (0,_api__WEBPACK_IMPORTED_MODULE_0__.get)(\"solicitudes/propositos\");\n    } catch (error) {\n        console.error(\"Error fetching propósitos:\", error);\n        // Return mock data\n        return {\n            success: true,\n            message: \"Propósitos obtenidos exitosamente (mock)\",\n            data: [\n                {\n                    id: 1,\n                    nombre: \"Evento deportivo\"\n                },\n                {\n                    id: 2,\n                    nombre: \"Entrenamiento\"\n                },\n                {\n                    id: 3,\n                    nombre: \"Competencia\"\n                },\n                {\n                    id: 4,\n                    nombre: \"Recreación\"\n                },\n                {\n                    id: 5,\n                    nombre: \"Clase\"\n                }\n            ]\n        };\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./services/solicitud-service.ts\n"));

/***/ })

});